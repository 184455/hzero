# hzero-国际化

hdtt.exception:
  model.exception.checkCompleteFlag: 是否包含已完成
  model.exception.errorText: 错误消息
  model.exception.errorTime: 出错时间
  model.exception.errorTimeFrom: 出错时间从
  model.exception.errorTimeTo: 出错时间至
  model.exception.errorType: 错误类型
  model.exception.eventId: 事件ID
  model.exception.eventType: 事件类型
  model.exception.handle: 处理
  model.exception.messages: 消息内容
  model.exception.number.warning: 请输入正整数
  model.exception.processMsg: 处理信息
  model.exception.retryTimes: 已重试次数
  model.exception.sourceKeyId: 数据ID
  model.exception.sourceService: 生产服务
  model.exception.status.failed: 失败
  model.exception.status.handling: 处理中
  model.exception.status.post: 错误已上报
  model.exception.status.post.failed: 错误上报失败
  model.exception.status.right: 无需处理
  model.exception.status.success: 完成
  model.exception.status.waiting: 待处理
  model.exception.tableName: 生产表名
  model.exception.targetDb: 消费DB
  model.exception.targetService: 消费服务
  model.exception.targetTable: 消费表
  model.exception.view.config: 查看配置
  view.message.title: 生产消费异常监控
hdtt.producerConfig:
  description: 说明
  endDate: 生效日期至
  lov.producerService: 生产服务
  model.producerConfig.consDB: 消费DB
  model.producerConfig.consDataSource: 消费数据源
  model.producerConfig.consServiceName: 消费服务
  model.producerConfig.consTableName: 消费表名
  model.producerConfig.consumerOffset: 初始偏移
  model.producerConfig.copy: 复制
  model.producerConfig.description: 说明
  model.producerConfig.enable: 是否启用
  model.producerConfig.init: 初始化
  model.producerConfig.initDb: 初始化DB
  model.producerConfig.initDdl: 初始化DDL
  model.producerConfig.initFlag: 是否初始化数据
  model.producerConfig.initMsg: 初始化消息
  model.producerConfig.initStatus: 初始化状态
  model.producerConfig.initTime: 初始化时间
  model.producerConfig.initTimeFrom: 初始化时间从
  model.producerConfig.initTimeTo: 初始化时间至
  model.producerConfig.producerService: 生产服务
  model.producerConfig.refresh.init: 刷新初始化DDL
  model.producerConfig.sourceDb: 生产DB
  model.producerConfig.tableName: 生产表名
  model.producerConfig.tenant: 租户
  model.producerConfig.tenantFlag: 是否按照租户分发
  model.producerConfig.tenantName: 消费租户
  model.producerConfig.topicStatus: Topic创建状态
  startDate: 生效日期从
  tableName: 生产表名
  tenantFlag: 是否按照租户分发
  view.message.basic.config: 基本配置
  view.message.copy.success: 复制成功
  view.message.create.consumer: 新建消费配置
  view.message.delete.warning: 请先修改后保存配置信息
  view.message.edit.consumer: 编辑消费配置
  view.message.init.defaultConfig: 初始化默认配置
  view.message.tenant.warning: 按租户分发时，必须至少有一个租户消费设置
  view.message.title: 数据消息生产消费配置
  view.message.title.config: 生产消费配置
  view.message.topicFailedInfo: Topic创建失败信息
  view.message.topicMsg: Topic创建消息
  view.message.topicTime: Topic创建时间
  view.message.tenant.repeat: 不可选择重复租户
hdtt.tableChangeLog:
  model.tableChangeLog.changeLog: 变更内容
  model.tableChangeLog.processMsg: 处理信息
  model.tableChangeLog.processTime: 处理时间
  model.tableChangeLog.sourceDs: 生产数据源
  model.tableChangeLog.targetDs: 消费数据源
  view.message.title: 表结构变更日志
hdtt.dataCheck:
  view.message.title: 数据核对
  view.message.title.launch: 发起核对
  model.dataCheck.batchNum: 核对批次
  model.dataCheck.chkLevel: 核对层级
  model.dataCheck.sourceTable: 生产表名
  model.dataCheck.targetTable: 消费表名
  model.dataCheck.sourceDs: 生产数据源
  model.dataCheck.targetDs: 消费数据源
  model.dataCheck.sourceDb: 生产DB
  model.dataCheck.targetDb: 消费DB
  model.dataCheck.sourceService: 生产服务
  model.dataCheck.targetService: 消费服务
  model.dataCheck.processTime: 处理时间
  model.dataCheck.processMsg: 处理消息
  model.dataCheck.remark: 备注
  view.message.detail: 详情
  view.message.title.modal.info: 处理信息
  model.dataCheck.handling: 处理中
  model.dataCheck.success: 完成
  model.dataCheck.failed: 失败
  model.dataCheck.waiting: 待处理
  model.dataCheck.fromService: 来源服务
  model.dataCheck.fromDb: 来源DB
  model.dataCheck.fromTable: 来源表
  model.dataCheck.toService: 目标服务
  model.dataCheck.toDb: 目标DB
  model.dataCheck.toTable: 目标表
  model.dataCheck.all: 全部
  view.message.title.modal.params: 参数选择
  view.message.title.dataInfo: 数据信息
  view.message.title.checkDetail: 核对详情
  view.message.title.detail: 数据核对详情
  model.dataCheck.sourceLine: 来源行
  model.dataCheck.targetLine: 消费行
  model.dataCheck.diffType: 差异类型
  model.dataCheck.diffContent: 差异内容
  model.dataCheck.dimension: 核对维度
  model.dataCheck.validation.checkLevel: '请选择核对维度'
hdtt.typeDefinition:
  model.typeDefinition.majorCategory: 应用大类
  model.typeDefinition.minorCategory: 应用小类
