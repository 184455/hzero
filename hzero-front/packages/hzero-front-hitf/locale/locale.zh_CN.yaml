# hzero-国际化
hitf.common:
  view.message.title.edit.mapping.class: 查看编辑映射类
  button.test: 测试
  view.message.title.testLog: 测试日志
  model.testResult: 测试结果
  model.log: 日志信息
  model.success: 成功
  model.failed: 失败
  button.cancel: 取消
  button.confirm: 确定

  view.tip.dw: 请参考DataWeave Language语法编写映射脚本，官方文档参见

  view.cron.second: 秒
  view.cron.minute: 分钟
  view.cron.hour: 小时
  view.cron.day: 日
  view.cron.month: 月
  view.cron.week: 周
  view.cron.year: 年
  view.cron.everyDay: 每日
  view.cron.notSpecify: 不指定
  view.cron.specify: 指定
  view.cron.period: 周期
  view.cron.from: 从
  view.cron.to: 到
  view.cron.fromCertain: 从第
  view.cron.perDayStart: 日开始，每
  view.cron.oneTimeForDay: 天执行一次
  view.cron.everyMonth: 每月
  view.cron.lastestWorkDay: 日最近的那个工作日
  view.cron.lastMonth: 本月最后
  view.cron.everyHour: 每小时,
  view.cron.singleHour: 时
  view.cron.perFromHour: 时开始，每
  view.cron.oneTimeForHour: 时执行一次
  view.cron.minNum: 至少选择一项
  view.cron.everyMinute: 每日
  view.cron.singleMinute: 分
  view.cron.perFromMinute: 分开始，每
  view.cron.oneTimeForMinute: 分执行一次
  view.cron.singleMonth: 月
  view.cron.singleDay: 天
  view.cron.oneTimeForMonth: 月执行一次
  view.cron.everySecond: 每秒
  view.cron.singleSecond: 秒
  view.cron.perFromSecond: 秒开始，每
  view.cron.oneTimeForSecond: 秒执行一次
  view.cron.everyWeek: 每周
  view.cron.singleWeek: 周
  view.cron.certain: 第
  view.cron.theWeek: 周的
  view.cron.weekDay: 星期
  view.cron.lastTheMonth: 本月最后一个
  view.cron.monday: 星期一
  view.cron.tuesday: 星期二
  view.cron.wednesday: 星期三
  view.cron.thursday: 星期四
  view.cron.friday: 星期五
  view.cron.saturday: 星期六
  view.cron.sunday: 星期日
  view.cron.everyYear: 每年
  view.cron.singleYear: 年

  view.logicOperation.and: 与
  view.logicOperation.or: 或
  view.logicOperation.equal: 等于
  view.logicOperation.notEqual: 不等于
  view.logicOperation.less: 小于
  view.logicOperation.lessOrEqual: 小于等于
  view.logicOperation.greater: 大于
  view.logicOperation.greaterOrEqual: 大于等于
  view.logicOperation.isEmpty: 为空
  view.logicOperation.isNotEmpty: 非空
  view.logicOperation.value: 值
  view.logicOperation.conditionField: 条件字段
  view.logicOperation.condition: 条件
  view.logicOperation.addConditionGroup: 添加条件分组
  view.logicOperation.addCondition: 添加条件
  view.logicOperation.not: 非
  view.logicOperation.sure: 确定
  view.logicOperation.deleteConditionConfirm: 确定删除该条件
  view.logicOperation.deleteGroupConfirm: 确定删除该条件分组
hitf.application:
  #  模板国际化
  view.message.title.editor.withEditedName: "修改“{name}”"
  #  普通国际化
  model.application.authFlag: 是否授权
  model.application.authorizedGrantTypes: 客户端授权类型
  model.application.client: 客户端
  model.application.clientName: 客户端名称
  model.application.clientTenantName: 所属租户
  model.application.code: 应用代码
  model.application.interfaceCode: 接口编码
  model.application.interfaceName: 接口名称
  model.application.name: 应用名称
  model.application.permissionType: 授权类型
  model.application.remark: 说明
  model.application.roleCode: 角色代码
  model.application.roleName: 角色名称
  model.application.serverCode: 服务代码
  model.application.serverName: 服务名称
  model.application.serverType: 服务类型
  model.application.serviceCode: 服务代码
  model.application.serviceName: 服务名称
  model.application.statisticsLevel: 统计维度
  model.application.tenant: 所属租户
  model.application.title.deleteContent: '未保存的数据将会丢失,确定删除吗?'
  view.button.addAuth: 添加授权
  view.button.addRole: 添加角色
  view.button.bind: 绑定
  view.button.deleteAuth: 删除授权
  view.button.deleteRole: 删除角色
  view.button.untie: 解绑
  view.message.title.auth.create: 创建认证配置
  view.message.title.auth.edit: 编辑认证配置
  view.message.title.create: 创建客户端授权
  view.message.title.edit: 编辑客户端授权
  view.message.title.editor.create: 创建应用
  view.message.title.header: 应用管理
  view.message.title.role.create: 创建角色授权
  view.message.title.role.edit: 编辑角色授权
hitf.clientAuth:
  view.message.title.header: 客户端授权
hitf.clientRole:
  model.clientRole.belong: 继承自
  model.clientRole.code: 角色编码
  model.clientRole.level: 角色层级
  model.clientRole.name: 角色名称
  model.clientRole.remark: 说明
  model.clientRole.roleSource: 角色来源
  model.clientRole.tenant: 所属租户
  model.clientRole.topRole: 上级角色
  view.button.auth: 授权
  view.title.header: 角色授权
  model.clientRole.interfaceCode: 接口代码
  model.clientRole.interfaceName: 接口名称
  model.clientRole.serverCode: 服务代码
  model.clientRole.serverName: 服务名称
  view.message.title.interface: 选择接口
  model.clientRole.searchName: 接口代码|接口名称|服务代码|服务名称
hitf.document:
  view.message.auth: 认证方式
  view.message.default: 默认
  view.message.empty: 暂无
  view.message.general.body: 通用请求体
  view.message.general.body.tip1: 平台API通过将外部API参数封装成为请求体中的payload实体内容进⾏行行透传，进⽽而调⽤用外部API
  view.message.general.body.tip2: 同时，返回时，通过解析外部API响应，进⽽而构造响应体中的payload实体内容进⾏行行返回
  view.message.interface.info: 外部接⼝请求信息
  view.message.introduction: 简介
  view.message.outer.interface: 外部接⼝信息
  view.message.platform.info: 平台API信息
  view.message.request: 请求
  view.message.response: 响应
  view.message.responseDemo: 响应示例
  view.message.structure: 最外层结构为
  view.message.type: 类型
  view.message.paramsList: Reqeust Header参数列表
  view.message.variablesList: Path变量列表
  view.message.requestParamsList: 请求查询参数列表
  view.message.payload: 指定payload解析格式，默认为application/json;charset=UTF-8
  view.message.entity: 指定payload实体内容
  view.message.api.version: api版本
  view.message.api.status: api状态
  view.message.api.warning: api警告信息，例如，即将过期
  view.message.api.info: api信息
  view.title.alternative: 备选值
  view.title.bodyParams: BODY参数
  view.title.create.bodyParams: 新建BODY参数
  view.title.create.childParams: 新建子节点参数
  view.title.create.pathParams: 新建路径参数
  view.title.create.queryParams: 新建GET/URL参数
  view.title.create.requestHeader: 新建请求头部参数
  view.title.create.respHeader: 新建响应头部参数
  view.title.create.respParams: 新建响应结果参数
  view.title.create.rootParams: 新建根节点参数
  view.title.demo: 示例
  view.title.detailDes: 详细说明
  view.title.document: 接口文档
  view.title.edit.bodyParams: 编辑BODY参数
  view.title.edit.params: 编辑参数
  view.title.edit.pathParams: 编辑路径参数
  view.title.edit.queryParams: 编辑GET/URL参数
  view.title.edit.requestHeader: 编辑请求头部参数
  view.title.edit.respHeader: 编辑响应头部参数
  view.title.edit.respParams: 编辑响应结果参数
  view.title.edit.testcase: 编辑测试用例
  view.title.failedDemo: 失败示例
  view.title.paramsInfo: 参数信息
  view.title.pathParams: 路径参数
  view.title.queryParams: GET/URL参数
  view.title.rawType: raw类型
  view.title.requestDemo: 请求示例
  view.title.requestDes: 请求说明
  view.title.requestHeader: 请求头部
  view.title.responseBody: 响应结果
  view.title.responseDes: 响应说明
  view.title.responseHeader: 响应头部
  view.title.rootType: JSON根类型
  view.title.successDemo: 成功示例
  view.title.test.history: 测试历史
  view.title.testcase: 测试用例
hitf.interfaceLogs:
  model.interfaceLogs.clientId: 客户端ID
  model.interfaceLogs.external.interfaceReqBodyParam: 第三方接口调用参数
  model.interfaceLogs.external.interfaceRespContent: 第三方接口响应内容
  model.interfaceLogs.external.interfaceUrl: 第三方接口地址
  model.interfaceLogs.invokeKey: 请求ID
  model.interfaceLogs.invokeType: 接口调用类型
  model.interfaceLogs.internal.reqBodyParam: 平台接口调用参数
  model.interfaceLogs.internal.requestTime: 平台接口请求时间
  model.interfaceLogs.requestTimeEnd: 请求时间至
  model.interfaceLogs.requestTimeStart: 请求时间从
  model.interfaceLogs.internal.respContent: 平台接口响应内容
  model.interfaceLogs.internal.responseStatus: 平台接口响应状态
  model.interfaceLogs.serverCode: 服务代码
  model.interfaceLogs.serverName: 服务名称
  model.interfaceLogs.tenant: 所属租户
  modal.interfaceLogs.interfaceServerVersion: 服务版本
  modal.interfaceLog.interfaceVersion: 接口版本
  model.interfaceLogs.internal.asyncFlag: 是否异步调用
  view.message.baseMessage: 基本信息
  view.message.clientId: 客户端ID
  view.message.detail: 详情
  view.message.detailMessage: 详情信息
  view.message.interfaceLogsDetail: 接口监控详情
  view.message.external.interfaceRequestTime: 第三方接口请求时间
  view.message.external.interfaceResponseTime: 第三方接口响应时间(ms)
  view.message.external.interfaceType: 第三方接口类型
  view.message.external.interfaceUrl: 第三方接口地址
  view.message.invokeKey: 请求ID
  view.message.ip: 请求IP
  view.message.referer: Referer
  view.message.internal.requestMethod: 平台接口请求方式
  view.message.internal.responseStatus: 平台接口响应状态
  view.message.internal.responseTime: 平台接口响应时间(ms)
  view.message.serverCode: 服务代码
  view.message.serverName: 服务名称
  view.message.stacktraceMessage: 异常信息
  view.message.title: 接口监控
  view.button.clearLogs: 日志清理
  view.message.userAgent: User-Agent
  view.message.success: 成功
  view.message.failed: 失败
  view.message.clearType: 类型
  view.message.translateError: 字段解析失败
  view.message.retryConfirm: 确认重试吗
  view.button.retry: 重试
  view.message.lastest: 当前接口最新版本为
  view.message.retryConfirm: 是否进行重试
hitf.interfaceStatistics:
  model.statistics.count: 异常次数
  model.statistics.interfaceCode: 接口代码
  model.statistics.latestTime: 最近异常时间
  model.statistics.serverCode: 服务代码
  model.statistics.statisticsDetail: 最近异常信息
  view.message.title.header: 健康状况监控
hitf.interfaces:
  model.interfaces.accessTokenUrl: Token URL
  model.interfaces.authFlag: 授权
  model.interfaces.authLevel: 认证层级
  model.interfaces.authLevelValue: 认证层级值
  model.interfaces.authPassword: 认证密码
  model.interfaces.authType: 认证模式
  model.interfaces.authUsername: 认证用户名
  model.interfaces.clientId: 客户端ID
  model.interfaces.clientSecret: 客户端密钥
  model.interfaces.grantType: 授权模式
  model.interfaces.tenantName: 所属租户
  model.interfaces.interfaceCode: 接口编码
  model.interfaces.interfaceName: 接口名称
  model.interfaces.isPublicFlag: 是否公共
  model.interfaces.remark: 备注
  model.interfaces.serverCode: 服务代码
  model.interfaces.serverName: 服务名称
  model.interfaces.serverType: 服务类型
  model.interfaces.soapPassword: 校验密码
  model.interfaces.soapUsername: 校验用户名
  model.interfaces.soapWssPasswordType: SOAP加密类型
  model.interfaces.table.column.option: 操作
  model.interfaces.passwordEncodeType: 密码加密类型
  view.button.auth: 认证配置
  view.button.viewDocument: 查看文档
  view.message.title.authConfigHeader: 认证配置
  view.message.title.header: 接口能力汇总
  view.message.button.auth.test: 测试
  view.message.test.success: 测试成功
  view.button.add: 批量添加认证
hitf.services:
  model.interfaceLogs.success: 成功
  model.interfaceLogs.failure: 失败
  model.services.accessTokenUrl: 获取Token的URL
  model.services.address: 服务地址
  model.services.address1: 服务地址
  model.services.authPassword: 认证密码
  model.services.authType: 认证模式
  model.services.authUsername: 认证用户名
  model.services.checkPeriod: 统计周期（秒）
  model.services.checkRoundRobin: 轮询周期（秒）
  model.services.checkCycle: 检查周期（秒）
  model.services.checkThreshold: 异常阈值
  model.services.checkUsecaseId: 所用测试用例
  model.services.checkWarningEmailFlag: 邮件预警
  model.services.checkWarningMsgTplCode: 预警消息模板代码
  model.services.checkWarningSmsFlag: 短信预警
  model.services.checkWarningUserId: 预警目标用户
  model.services.clientId: 客户端ID
  model.services.clientSecret: 客户端密钥
  model.services.code: 服务代码
  model.services.namespace: 服务命名空间
  model.services.defaultValue: 默认值
  model.services.demo: 示例
  model.services.demo.content: 示例内容
  model.services.documentName: 文档名称
  model.services.encryptionType: 加密类型
  model.services.formatRegexp: 格式限制
  model.services.grantType: 授权模式
  model.services.healthCheckFlag: 是否开启健康检查
  model.services.httpcode: Http响应码
  model.services.interfaceAddress: 接口地址
  model.services.interfaceCode: 接口编码
  model.services.interfaceName: 接口名称
  model.services.invokeDetailsFlag: 记录调用详情
  model.services.invokeStatisticsFlag: 是否记录调用次数
  model.services.mappingClass: 映射类
  model.services.modelCode: 模型编码
  model.services.name: 服务名称
  model.services.soapNameSpace: 命名空间
  model.services.bodyNamespaceFlag: body命名空间
  model.services.asyncFlag: 异步调用
  model.services.param: 参数
  model.services.param.alternative.value: 参数潜在值
  model.services.paramName: 参数名
  model.services.paramPrefix: 参数前缀
  model.services.paramValue: 参数值
  model.services.paramValueType: 类型
  model.services.password: 校验密码
  model.services.publishUrl: 发布地址
  model.services.releaseType: 发布类型
  model.services.remark: 说明
  model.services.requestHeader: 接口ContentType
  model.services.requestMethod: 请求方式
  model.services.requestUrl: 请求地址
  model.services.requiredFlag: 是否必填
  model.services.resDetail: 请求详情
  model.services.respDetail: 响应详情
  model.services.responseStatus: 返回状态
  model.services.responseTime: 耗时
  model.services.soapVersion: SOAP版本
  model.services.statisticsExceedAction: 超阈值措施
  model.services.statisticsGrace: 宽免次数
  model.services.statisticsLevel: 统计维度
  model.services.statisticsPeriod: 统计周期
  model.services.statisticsThreshold: 统计阈值
  model.services.statisticsWarningBefore: 提前预警（次数）
  model.services.table.column.option: 操作
  model.services.tenant: 所属租户
  model.services.test.time: 测试时间
  model.services.type: 服务类型
  model.services.usecaseName: 用例名称
  model.services.usecaseType: 用例类型
  model.services.userName: 校验用户名
  model.services.passwordEncodeType: 密码加密类型
  model.services.category: 服务类别
  model.services.enabledCertificateFlag: 是否启用证书
  model.services.enabledFlag: 是否启用
  model.services.serviceType: 服务类型
  model.services.certificate: 证书
  model.services.swaggerUrl: swagger地址
  model.services.publicFlag: 公开接口
  model.services.file: 文件
  model.services.fieldName: 属性名
  model.services.fieldType: 字段类型
  model.services.fieldDesc: 字段描述
  model.services.fieldExpr: 表达式
  model.services.fieldLevel: 隐私级别
  model.services.sqeNum: 排序号
  model.services.paramType: 参数类型
  model.services.paramDesc: 描述
  model.services.bindAttr: 绑定属性
  model.services.paramLocation: 参数位置
  model.services.operatorCode: 操作符
  model.services.requestProtocol: 请求协议
  model.services.responseType: 响应类型
  model.services.expressionType: 表达式类型
  model.services.expressionContent: 表达式内容

  view.message.history.version: 历史版本
  view.message.current.version: 当前版本
  view.message.override.version: 版本回退
  view.message.newest.version: 最新版本
  view.message.title.detail.mapping.class: 查看映射类详情
  view.button.authConfig: 服务认证配置
  view.button.httpConnectConfig: HTTP连接配置
  view.message.title.detail.httpConfig: 查看http配置
  view.button.create: 注册
  view.button.document: 编辑接口文档
  view.button.execute: 执行
  view.button.operationalConfig: 运维配置
  view.button.recognize: 参数识别
  view.button.test.history: 查看测试历史
  view.button.view: 预览
  view.button.view.code: 代码预览
  view.button.import: 导入
  view.button.address.import: 服务地址导入
  view.message.detail: 详细信息
  view.message.importPlaceHolder: 导入地址：支持导入WSDL或者Swagger服务地址描述地址
  view.message.importMessage: 已提交导入请求（{requestNum}）, 请在导入历史中查看完成状态
  view.message.title.deleteContent: 确定删除吗？
  view.message.title.detail: 服务注册详情
  view.message.title.editor.authConfig: 服务认证配置
  view.message.title.editor.create: 注册服务
  view.message.title.editor.edit: 修改服务配置
  view.message.title.header: 服务注册
  view.message.title.interface.create: 创建接口
  view.message.title.interface.edit: 编辑接口
  view.message.test.success: 测试成功
  view.title.basicInfo: 基本信息
  view.title.detailInterfaces: 接口配置
  view.title.healthExamination: 健康检查
  view.title.statisticalAnalysis: 统计分析
  view.title.internal.interface: 选择内部接口
  view.button.test: 测试
  view.button.create.internal: 新建内部接口
  view.message.title.interface: 选择内部接口
  view.message.tip.serviceType: 目前仅支持REST风格与SOAP风格两种服务
  view.message.tip.serviceCategory: 区分服务地址来源，外部接口需要服务认证配置
  view.message.tip.recognize: 拉取swagger的参数
  view.message.tip.invokeDetailsFlag: 开启记录调用详情可以在接口监控界面查询到接口的调用信息
  view.message.tip.healthCheckFlag: 开启健康检查可以在健康状况监控界面查询到接口的异常信息
  view.message.tip.addRecipient: 添加的接收人可以收到接口异常信息的通知
  view.message.tip.checkThreshold: 接口调用异常超过该数值就会生成健康状况监控记录以及通知接收人
  hitf.services.view.message.tip.soapNamespace: SOAP 请求封装的 XML 命名空间
  hitf.services.view.message.tip.namespace: 通过服务命名空间缓存打包接口

  model.services.httpConfig: http配置
  model.services.requestTransform: 请求映射
  model.services.responseTransform: 响应映射
  model.services.requestCast: 请求转化
  model.services.responseCast: 响应转化
  model.services.dataSourceLov: 数据源名称
  model.services.dsType: 数据源类型
  model.services.exprType: 表达式类型
  model.services.useRemark: 用途说明

  view.option.edit: 编辑
  view.title.create: 新建服务模型
  view.title.attrList: 属性列表
  view.title.paramList: 参数列表
  model.services.view: 表或视图
  view.button.add: 新增
  view.button.batchDelete: 批量删除
  view.button.release: 发布
  view.button.offline: 下线
  view.title.basicAttribute: 基本属性
  view.title.viewMappingClass: 查看映射类详情
  view.title.viewHttpConfig: 查看http配置
  view.title.mainConfig: 详细配置
  model.services.sql: SQL表达式
  view.title.paramCancelCheck: 取消勾选将会删除关联的参数行
  view.validate.save: 请完善必输信息
  view.title.analysis: 解析SQL将会删除属性列表和参数列表数据，是否解析
  view.title.sqlError: 请先填写SQL表达式
  view.title.changeView: 切换表或视图将会删除属性列表和参数列表数据，是否切换

  view.button.analysis: 解析
  view.title.modelFieldList: 属性列表
  view.message.sql: 在sql最外层请不要写SELECT *
  view.message.attrSaveError: 新建的接口只能通过右下角保存按钮进行保存
  view.message.fieldDeleteConfirm: 删除该属性字段的同时，会删除被其绑定的参数，是否确认删除？
  view.message.fieldsSelectedAll: 在线状态的模型不支持选择属性字段作为参数，请先下线模型后再进行选择！
  view.message.sqlParseWarning: 未解析出属性字段或者请求参数，请确认sql是否正确！
  notification.error.model: 表单验证失败，请检查！
  view.button.clean: 清除
  view.button.delete: 删除

  view.placeholder.unchange: 未更改
  view.placeholder.formCode: 认证模式
  view.placeholder.modifiedSuccess: 修改成功
  view.button.analysisSQL: 解析SQL
  view.button.changeTable: 切换表或视图

  view.title.retry: 重试

  model.services.subject: 对象
  model.services.condition: 条件
  model.services.field: 字段
  model.services.key: 键
  model.services.value: 值
  model.services.type: 类型
  model.services.expectation: 期望值

  model.services.times: 次
  model.services.seconds: 秒
  model.services.retryTimes: 失败重试次数
  model.services.retryInterval: 失败重试间隔

  model.services.assertion: 重试断言
  view.button.addAssertion: 添加断言
  view.button.clearAssertion: 清空断言

hitf.typeDefinition:
  view.message.title.typeDefinition: 应用类型定义
  model.typeDefinition.applicationCode: 应用代码
  model.typeDefinition.name: 应用名称
  model.typeDefinition.majorCategory: 应用大类
  model.typeDefinition.minorCategory: 应用小类
  model.typeDefinition.interfaceId: 开放接口
  model.typeDefinition.composePolicy: 编排策略
  model.typeDefinition.remark: 说明
  model.typeDefinition.fastFail: 快速失败
  view.message.title.edit: 编辑
  view.message.title.instance.config: 实例配置
  view.message.title.application.type: 应用类型
  model.typeDefinition.pattern.error: 只能包含大写字母及数字
  model.typeDefinition.instance.code: 实例接口代码
  model.typeDefinition.instance.name: 实例接口名称
  model.typeDefinition.instance.weight: 权重
  model.typeDefinition.instance.orderSeq: 优先级
  model.typeDefinition.instance.sorder: 排序
  model.typeDefinition.instance.class: 映射类
  model.typeDefinition.sourceParamNameRemark: 实例参数说明
  model.typeDefinition.combineParamNameRemark: 组合参数说明
  view.message.title.instance.create: 新建实例配置
  view.message.title.instance.edit: 编辑实例配置
  view.message.title.request.mapping: 请求参数映射
  view.message.title.response.mapping: 响应参数映射
  view.message.title.button.refresh: 刷新参数配置
  model.typeDefinition.sourceParamName: 实例参数
  model.typeDefinition.sourceParamNameType: 实例参数类型
  model.typeDefinition.sourceParamRemark: 实例参数说明
  model.typeDefinition.targetParamName: 映射参数
  model.typeDefinition.targetParamNameType: 映射参数类型
  model.typeDefinition.targetParamRemark: 映射参数说明
  model.typeDefinition.combineParamName: 组合参数
  model.typeDefinition.combineParamNameType: 组合参数类型
  model.typeDefinition.combineParamRemark: 组合参数说明
  view.message.title.detail.mapping.class: 查看映射类详情
hitf.importHistory:
  view.message.title.importHistory: 导入历史
  model.importHistory.requestNum: 请求编号
  model.importHistory.importUser: 导入人
  model.importHistory.importUrl: 导入地址
  model.importHistory.importStatus: 导入状态
  model.importHistory.importMessage: 导入消息
  model.importHistory.tenant: 所属租户
hitf.chargeSet:
  view.meaasge.confirm.cancel: 确定撤销？
  view.meaasge.confirm.publish: 确定发布？
  view.meaasge.cancel.failed: 撤销失败
  view.meaasge.cancel.success: 撤销成功
  view.meaasge.cancel.wait: 撤销失败，请稍后再试。
  view.meaasge.publish.failed: 发布失败
  view.meaasge.publish.success: 发布成功
  view.meaasge.publish.wait: 发布失败，请稍后再试。
  view.meaasge.confirm.save: 请先保存数据
  view.meaasge.validate: 请先完善必输内容
  view.message.chargeSetLine.limit: 至少维护一条计费规则
  view.message.title.chargeSetHeader: 接口服务计费设置
  view.button.add: 新建
  view.button.save: 保存
  view.button.publish: 发布
  view.button.cancel: 撤销
  view.button.buyDetail: 购买详情
  model.chargeSetHeader.sort: 序号
  model.chargeSetHeader.setCode: 计费代码
  model.chargeSetHeader.setName: 计费名称
  model.chargeSetHeader.typeCode: 计费类型
  model.chargeSetHeader.statueCode: 状态
  model.chargeSetHeader.serverCode: 服务代码
  model.chargeSetHeader.serverName: 服务名称
  model.chargeSetHeader.interfaceCode: 接口代码
  model.chargeSetHeader.interfaceName: 接口名称
  model.chargeSetHeader.startDate: 生效日期
  model.chargeSetHeader.startDateFrom: 生效日期从
  model.chargeSetHeader.startDateTo: 生效日期至
  model.chargeSetHeader.remark: 备注
  view.message.title.chargeSet.detail: 接口服务计费设置详情
  view.message.title.basicInformation: 基本信息
  view.message.title.chargeRule: 计费规则
  model.chargeSetLine.seqNumber: 序号
  model.chargeSetLine.chargeRuleCode: 计费规则代码
  model.chargeSetLine.chargeRuleName: 计费规则
  model.chargeSetLine.settlementPeriod: 结算周期
  model.chargeSetLine.paymentModel: 付费模式
  model.chargeSetLine.chargeMethodCode: 计费方式
  model.chargeSetLine.chargeUomCode: 计费单位
  model.chargeSetLine.startDate: 起始日期
  model.chargeSetLine.endDate: 截止日期
  model.chargeSetLine.remark: 备注
  view.tag.typeCode.interface: 接口计费
  view.tag.typeCode.server: 服务计费
  view.tag.statusCode.new: 新建
  view.tag.statusCode.published: 已发布
  view.tag.statusCode.cancelled: 已撤销
  view.tag.chargeMethod.count: 计量
  view.tag.chargeMethod.package: 总包
  view.tag.paymentModel.before: 预付费
  view.tag.paymentModel.after: 后付费
hitf.chargeGroup:
  view.meaasge.confirm.cancel: 确定撤销？
  view.meaasge.confirm.publish: 确定发布？
  view.meaasge.cancel.failed: 撤销失败
  view.meaasge.cancel.success: 撤销成功
  view.meaasge.cancel.wait: 撤销失败，请稍后再试。
  view.meaasge.publish.failed: 发布失败
  view.meaasge.publish.success: 发布成功
  view.meaasge.publish.wait: 发布失败，请稍后再试。
  view.meaasge.confirm.save: 请先保存数据
  view.message.title.chargeGroupHeader: 组合服务计费设置
  view.button.add: 新建
  view.button.save: 保存
  view.button.cancel: 撤销
  view.button.publish: 发布
  view.button.delete: 删除
  view.button.buyDetail: 撤销
  view.meaasge.validate: 请先完善必输内容
  view.message.chargeSetLine.limit: 至少维护一条服务信息
  view.message.chargeGroupRule.limit: 至少维护一条计费规则
  model.chargeGroupHeader.sort: 序号
  model.chargeGroupHeader.groupCode: 组合代码
  model.chargeGroupHeader.groupName: 组合名称
  model.chargeGroupHeader.chargeGroupRule: 计费规则
  model.chargeGroupHeader.ruleList: 规则列表
  model.chargeGroupHeader.serverList: 服务列表
  model.chargeGroupHeader.purchaseList: 订购列表
  model.chargeGroupHeader.statueCode: 状态
  model.chargeGroupHeader.startDate: 生效日期
  model.chargeGroupHeader.remark: 备注
  view.message.title.detail: 接口服务计费设置详情
  view.message.title.basicInformation: 基本信息
  view.message.title.chargeGroupLine: 组合计费设置明细
  model.chargeGroupLine.sort: 序号
  model.chargeGroupLine.typeCode: 类型
  model.chargeGroupLine.serverCode: 服务代码
  model.chargeGroupLine.serverName: 服务名称
  model.chargeGroupLine.interfaceCode: 接口代码
  model.chargeGroupLine.interfaceName: 接口名称
  model.chargeGroupLine.remark: 备注
  model.chargeGroupRule.sort: 序号
  model.chargeGroupRule.chargeRuleName: 规则名称
  model.chargeGroupRule.chargeRuleCode: 规则代码
  model.chargeGroupRule.settlementPeriod: 结算周期
  model.chargeGroupRule.paymentModel: 付费模式
  model.chargeGroupRule.chargeMethodCode: 计费方式
  model.chargeGroupRule.chargeUomCode: 计费单位
  model.chargeGroupRule.startDate: 起始日期
  model.chargeGroupRule.endDate: 截止日期
  view.tag.typeCode.interface: 接口计费
  view.tag.typeCode.server: 服务计费
  view.tag.statusCode.new: 新建
  view.tag.statusCode.published: 已发布
  view.tag.statusCode.cancelled: 已撤销
hitf.purchase:
  view.meaasge.confirm.purchase: 确定购买？
  view.meaasge.purchase.failed: 购买失败
  view.meaasge.purchase.success: 购买成功
  view.meaasge.purchase.wait: 购买失败，请稍后再试。
  view.message.title.userPurchase: 已购买列表
  model.userPurchase.sort: 序号
  model.userPurchase.sourceType: 来源类型
  model.userPurchase.statusCode: 状态
  model.userPurchase.serverName: 服务名称
  model.userPurchase.interfaceName: 接口名称
  model.userPurchase.chargeRuleName: 计费规则名称
  model.userPurchase.chargeRuleCode: 计费规则代码
  model.userPurchase.chargeMethod: 计费方式
  model.userPurchase.paymentModel: 付费模式
  model.userPurchase.settlementPeriod: 结算周期
  model.userPurchase.totalCount: 可用数量
  model.userPurchase.useCount: 已用数量
  model.userPurchase.remainCount: 余量
  model.userPurchase.chargeUomCode: 计费单位
  model.userPurchase.nextBillTime: 下一个账单时间
  model.userPurchase.remark: 备注
  view.message.operation.purchaseList: 购买列表
  view.message.operation.purchase: 购买
  view.message.title.availablePurchase: 可购买列表
  model.availablePurchase.sort: 序号
  model.availablePurchase.statusCode: 状态
  model.availablePurchase.typeCode: 类型
  model.availablePurchase.chargeName: 计费名称
  model.availablePurchase.serverName: 服务名称
  model.availablePurchase.interfaceName: 接口名称
  model.availablePurchase.chargeRuleName: 计费规则名称
  model.availablePurchase.paymentModel: 付费模式
  model.availablePurchase.chargeMethod: 计费方式
  model.availablePurchase.remark: 备注
  view.message.title.purchaseList: 购买列表
  model.purchaseList.sort: 序号
  model.purchaseList.userName: 用户名称
  model.purchaseList.tenantName: 所属租户
  model.purchaseList.chargeRuleName: 计费规则
  model.purchaseList.constantValue: 数量
  model.purchaseList.chargeUomCode: 单位
  model.purchaseList.price: 金额
  model.purchaseList.creationDate: 购买时间
  view.tag.typeCode.interface: 接口计费
  view.tag.typeCode.server: 服务计费
  view.tag.typeCode.group: 组合计费
  view.message.title.serverAvailable: 组合列表
  model.serverAvailable.sort: 序号
  model.serverAvailable.statusCode: 状态
  model.serverAvailable.serverTypeCode: 类型
  model.serverAvailable.serverName: 服务名称
  model.serverAvailable.interfaceName: 接口名称
  model.serverAvailable.remainCount: 余量
  model.serverAvailable.remark: 备注
  view.tag.availableStatus.needPay: 账单支付
  view.tag.availableStatus.available: 可用
  view.tag.availableStatus.billing: 结算中
  view.tag.availableStatus.useUp: 已到期
  view.meaasge.purchased: 已购买
hitf.chargeRule:
  view.title.chargeRuleLine: 计费规则
  model.chargeRuleLine.sort: 序号
  model.chargeRuleLine.greaterThan: 大于
  model.chargeRuleLine.lessAndEquals: 小于等于
  model.chargeRuleLine.constantValue: 总包
  model.chargeRuleLine.price: 价格

hitf.messageQueue:
  view.title.messageQueue: 消息队列
  view.title.mqManage: 队列管理
  view.title.basicInfo: 基本信息
  view.title.detailInfo: 详情信息
  view.title.topicLine: topic维护
  view.title.consumerLine: 消费者维护
  view.title.tagMaintain: 维护Tags
  model.messageQueue.groupCode: 队列组代码
  model.messageQueue.groupName: 队列组名称
  model.messageQueue.topicCode: topic代码
  model.messageQueue.topicName: topic名称
  model.messageQueue.methodType: 消费方式
  model.messageQueue.seqNumber: 序号
  model.messageQueue.queueNumber: 队列数量
  model.messageQueue.enabledFlag: 启用
  model.messageQueue.topicEnabledFlag: topic启用
  model.messageQueue.tags: tags
  model.messageQueue.remark: remark
  model.messageQueue.consumer: 消费者
  model.messageQueue.consumerType: 类型
  model.messageQueue.consumerPath: 地址
  model.messageQueue.tagCode: tag编码
  model.messageQueue.tagDescription: tag描述
  model.messageQueue.saveValidate: 请先完善必输内容

hitf.mqConsumer:
  view.title.messageQueue: 消息队列
  view.title.mqManage: 队列管理
  view.title.basicInfo: 基本信息
  view.title.detailInfo: 详情信息
  model.mqConsumer.consumerCode: 消费者代码
  model.mqConsumer.consumerName: 消费者名称
  model.mqConsumer.consumerType: 类型
  model.mqConsumer.seqNumber: 序号
  model.mqConsumer.groupCode: 消费组代码
  model.mqConsumer.groupName: 消费组名称
  model.mqConsumer.mqCode: 队列代码
  model.mqConsumer.mqName: 队列名称
  model.mqConsumer.tagCode: tag编码
  model.mqConsumer.tagDescription: tag描述
  model.mqConsumer.consumerPath: 地址
  model.mqConsumer.remark: 备注
  model.mqConsumer.enabledFlag: 启用

hitf.structureField:
  view.message.title.structureFieldHeader: 结构字段定义
  model.structureFieldHeader.sort: 序号
  model.structureFieldHeader.structureNum: 结构编码
  model.structureFieldHeader.structureName: 结构名称
  model.structureFieldHeader.structureCategory: 结构分类
  model.structureFieldHeader.structureDesc: 结构描述
  model.structureFieldHeader.bizUsage: 业务用途
  model.structureFieldHeader.enabledFlag: 是否启用
  model.structureFieldLine.fieldName: 字段名称
  model.structureFieldLine.parentName: 父字段名称
  model.structureFieldLine.fieldDesc: 字段描述
  model.structureFieldLine.fieldType: 字段类型
  model.structureFieldLine.seqNum: 排序号
  model.structureFieldLine.formatMask: 格式掩码
  model.structureFieldLine.defaultValue: 默认值
  model.structureFieldLine.remark: 备注
  model.structureFieldLine.enabledFlag: 是否启用
  model.structureField.object: 对象
  model.structureField.array: 数组
  model.structureField.char: 字符
  model.structureField.number: 数字
  model.structureField.boolean: 布尔
  view.button.edit: 编辑
  view.button.detail: 明细
  view.button.enable: 启用
  view.button.disable: 禁用
  view.button.soap: SOAP
  view.button.rest: REST
  view.message.title.basicInfo: 基本信息
  view.message.title.structureFieldLine: 字段明细
  view.message.title.structureReview: 结构预览
  view.meaasge.confirm.delete: 确认删除？
  view.meaasge.delete.success: 删除成功
  view.meaasge.delete.wait: 发布失败，请稍后再试。
  view.message.structureFieldLine.limit: 至少维护一条结构字段明细数据
  view.meaasge.confirm.save: 请先保存数据
  view.tag.structureCategory.mapping: 结构映射
  view.tag.bizUsage.itgPayload: 集成平台响应映射
  view.tag.composition.row: 行结构
  view.tag.composition.tree: 树结构
  view.validation.format.structureNum: 全大写字母
  view.validation.format.fieldName: 全字母
  view.validation.format.defaultValue: 只能输入true/false
  view.meaasge.confirm.enable: 确定启用？
  view.meaasge.confirm.disable: 确定禁用？
  view.meaasge.enable.success: 启用成功
  view.meaasge.disable.success: 禁用成功
  view.meaasge.enable.wait: 启用失败，请稍后再试。
  view.meaasge.disable.wait: 禁用失败，请稍后再试。
  view.title.structureFieldLine.edit: 编辑字段
  view.title.structureFieldLine.create: 新建字段
  hitf.structureField.view.message.validate: 请先完善必输内容

hitf.fieldMapping:
  view.button.exec: 执行
  view.button.viewHistory: 查看历史版本
  view.button.revert: 版本回退至
  view.button.release: 发布
  view.button.offline: 下线
  view.button.sameNameRel: 同名关联
  view.button.sameLineRel: 同行关联
  view.button.cancelRel: 取消关联

  view.title.header: 字段映射
  view.title.detail: 字段映射明细
  view.title.basicInfo: 基本信息
  view.title.detailInfo: 字段映射维护
  view.title.versionHistory: 历史版本
  view.title.status: 状态

  model.fieldMapping.seqNumber: 序号
  model.fieldMapping.transformCode: 字段映射代码
  model.fieldMapping.transformName: 字段映射名称
  model.fieldMapping.transformType: 字段映射类型
  model.fieldMapping.version: 版本
  model.fieldMapping.fromVersion: 来源版本
  model.fieldMapping.transformScript: 映射转化脚本
  model.fieldMapping.sourceStructure: 映射来源结构
  model.fieldMapping.targetStructure: 映射目标结构

  model.fieldMapping.sourceTitle: 来源结构
  model.fieldMapping.sourceTitle.tip: 来源结构，设定来源数据结构，通过JSON结构体表达数据结构。通过与目标结构连线构造出DW脚本，可实现JSON与JSON、XML与XML、JSON与XML之间的互相转换。
  model.fieldMapping.targetTitle: 目标结构
  model.fieldMapping.targetTitle.tip: 来源结构，设定目标数据结构，通过JSON结构体表达数据结构。通过与来源结构连线构造出DW脚本，可实现JSON与JSON、XML与XML、JSON与XML之间的互相转换。
  view.modal.fieldData: 字段数据

  view.modal.execConfirm: 确定执行映射转化吗

  model.fieldMapping.saveValidate: 请先完善必输内容
  model.fieldMapping.saveEmpty: 无修改内容,无需保存

hitf.dataMapping:
  view.button.exec: 执行
  view.button.mappingMaintain: 值映射维护
  view.button.addCondition: 添加条件
  view.button.viewHistory: 查看历史版本
  view.button.revert: 版本回退至
  view.button.release: 发布

  view.title.header: 数据映射
  view.title.detail: 数据映射明细
  view.title.createLine: 创建转换维护信息
  view.title.editLine: 更新转换维护信息
  view.title.basicInfo: 基本信息
  view.title.detailInfo: 转换维护
  view.title.formulaMaintain: 公式维护
  view.title.castValMaintain: 值转换维护
  view.title.conditionMaintain: 条件维护

  model.dataMapping.seqNumber: 序号
  model.dataMapping.castCode: 数据映射代码
  model.dataMapping.castName: 数据映射名称
  model.dataMapping.dataType: 数据映射类型

  model.dataMapping.castType: 数据映射类型
  model.dataMapping.castRoot: 字段路径
  model.dataMapping.castField: 字段名称
  model.dataMapping.castFormula: 公式转换
  model.dataMapping.castVal: 值转换
  model.dataMapping.castSql: SQL转换
  model.dataMapping.Sql: SQL
  model.dataMapping.formula: 公式

  model.dataMapping.castLovCode: 值集编码
  model.dataMapping.castLovField: 值集转化字段
  model.dataMapping.castLovLang: 值集转化语言

  model.dataMapping.exprSourceType: 来源类型
  model.dataMapping.exprSourceValue: 来源值

  model.dataMapping.targetValue: 目标值
  model.dataMapping.condition: 条件
  model.dataMapping.conjunction: 多条件连接符

  model.dataMapping.fieldType: 目标字段类型

  model.dataMapping.conditionField: 条件字段
  model.dataMapping.sourceValue: 值

  view.title.versionHistory: 历史版本
  view.title.status: 状态
  model.dataMapping.version: 版本
  model.dataMapping.fromVersion: 来源版本

  model.dataMapping.saveValidate: 请先完善必输内容
  model.dataMapping.saveEmpty: 无修改内容,无需保存

hitf.dynamicMqConfig:
  view.title.dynamicMqConfig: 消息中间件配置
  view.title.detail: 消息中间件配置详情
  view.title.createHeader: 新建消息中间件配置
  view.title.paramOptionHeader: 参数选项配置
  view.title.sendMessage: 发送消息

  view.button.bind: 激活绑定
  view.button.unbind: 取消绑定
  view.button.paramOption: 参数选项
  view.button.send: 发送

  view.title.basicInformation: 中间件配置
  view.title.detailInformation: 绑定配置

  model.dynamicMqConfig.binderName: 中间件名称
  model.dynamicMqConfig.binderType: 中间件类型
  model.dynamicMqConfig.enabledFlag: 是否启用
  model.dynamicMqConfig.remark: 备注说明

  model.dynamicMqConfig.bindingName: 绑定名称(通道)
  model.dynamicMqConfig.bindingType: 绑定类型
  model.dynamicMqConfig.destination: 目标(Topic)
  model.dynamicMqConfig.bindingGroup: 生产或消费组
  model.dynamicMqConfig.contentType: 媒体类型(Mime Type)
  model.dynamicMqConfig.charset: 字符集

  model.dynamicMqConfig.propertyKey: 属性键
  model.dynamicMqConfig.propertyValue: 属性值

  model.dynamicMqConfig.message: 消息

  model.dynamicMqConfig.saveValidate: 请先完善必输内容
  model.dynamicMqConfig.saveEmpty: 无修改内容,无需保存

  model.dynamicMqConfig.bindValidate: 只能激活绑定已启用的中间件，不能包含禁用数据
  model.dynamicMqConfig.unbindValidate: 只能取消绑定已启用的中间件，不能包含禁用数据
  model.dynamicMqConfig.checkBind: 确定激活绑定吗
  model.dynamicMqConfig.checkUnbind: 确定取消绑定吗
  model.dynamicMqConfig.checkEnable: 确定启用吗
  model.dynamicMqConfig.checkDisable: 确定禁用吗
  model.dynamicMqConfig.producer: 生产者
  model.dynamicMqConfig.consumer: 消费者

hitf.traceLogs:
  model.traceLog.sourceCode: 来源代码
  model.traceLog.sourceName: 来源名称
  model.traceLog.invokeKey: 请求ID
  model.traceLog.clientName: 客户端名称
  model.traceLog.requestTime: 请求时间
  model.traceLog.ip: 请求IP
  model.traceLog.requestMethod: 请求方式
  model.traceLog.requestUrl: 请求路径
  model.traceLog.responseTime: 响应时间
  model.traceLog.responseStatus: 响应状态
  model.traceLog.sourceType: 来源类型
  model.traceLog.sourceSystem: 来源系统
  model.traceLog.sourceDocumentNum: 来源单据号
  model.traceLog.sourceDocumentId: 来源单据id
  model.traceLog.batchNum: 来源批次号
  model.traceLog.userAgent: User-Agent
  model.traceLog.referer: Referer
  button.clear.log: 日志清理
  model.traceLog.detail: 详情
  view.message.title.traceLog: 日志记录
  view.message.translateError: 字段解析失败
  view.message.title.traceLog: 日志详情
  view.message.baseMessage: 基本信息
  view.message.reqParam: 请求参数
  view.message.respContent: 响应内容
  view.message.errorStack: 异常信息
