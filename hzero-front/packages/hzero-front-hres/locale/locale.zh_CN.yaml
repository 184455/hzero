# hres-国际化

hres.common:
  model.hres.name: 名称
  notification.unmodified: 表单未做修改
  notification.validate: 校验通过
  notification.required: 存在必输字段未填写
hres.rule:
  model.rule.ruleCode: 规则编码
  model.rule.ruleName: 规则名称
  model.rule.frozen: 冻结
  model.rule.code: 编码
  model.rule.type: 类型
  model.rule.maskCode: 掩码
  model.rule.must.input: 是否必输
  model.rule.formulaText: 公式内容
  model.rule.formula: 公式
  model.rule.enter: 入参
  model.rule.out: 出参
  model.rule.delete: 删除
  model.rule.flow: 流程
  model.rule.serviceRoute: 服务路由
  model.rule.executeStatus: 执行状态
  model.rule.executeID: 执行ID
  model.rule.exception: 异常信息
  model.rule.executeData: 调用数据
  view.title.rule.list: 规则列表
  view.title.create: 新建规则
  view.title.edit: 编辑规则
  view.title.least.checklist: 请至少勾选一条数据！
  view.title.please.json: 请上传JSON配置文件(.json)
  view.title.prompt: 提示
  view.title.upload.files: 上传文件
  view.title.submission: 提交
  view.title.import.information: 导入信息
  view.title.import.configuration.result: 导入配置输出结果
  view.title.import.configuration: 导入配置
  view.title.test: 规则引擎测试界面
  view.button.addLine: 新增行
  view.message.both.entry: 无法通过参数和json格式同时录入数据
  view.message.execute.failure: 执行失败，无流程
  view.button.execute: 执行调用
  view.tab.param: 参数录入
  view.tab.json: json格式录入
  view.rule.responseData: 返回数据
  view.button.flowDetail: 流程详情
  view.button.flowStatus: 流程状态
hres.flow:
  view.button.validate: 校验
  model.flow.formulaName: 公式名称
  model.flow.formulaType: 公式类型
  model.flow.formulaContent: 公式内容
  model.flow.formulaCmp: 公式组件
  model.flow.sqlCmp: Sql组件
  model.flow.mappingCmp: 映射组件
  model.flow.ruleCmp: 规则组件
  model.flow.groupComponent: 分组组件
  model.flow.sqlName: sql名称
  model.flow.dataSource: 数据源
  model.flow.sqlContent: sql内容
  model.flow.start: 开始
  model.flow.end: 结束
  view.title.edit: 编辑流程
  view.title.formula: 公式编辑
  view.message.func: 常用函数
  view.message.abs: 1、绝对值：ABS(A)
  view.message.concat: 2、多字段拼接：CONCAT(A,B,C,...)
  view.message.max: 3、最大值：MAX(A,B,C,...)
  view.message.min: 4、最小值：MIN(A,B,C,...)
  view.message.round: 5、四舍五入：ROUND(A,B)
  view.message.if: 6、比较判定：IF(A==B,C,D)
  view.message.add: 7、加：A+B
  view.message.minus: 8、减：A-B
  view.message.times: 9、乘：A*B
  view.message.divided: 10、除：A/B
  view.message.remainder: 11、取余：A%B
  view.message.less: 12、小于等于：A<=B
  view.message.more: 13、大于等于：A>=B
  view.message.neq: 14、不等于：A!=B
  view.message.equal: 15、等于：A==B
  view.message.and: 16、与：A&&B
  view.message.or: 17、或：A||B
  view.message.false: 18、非：!A
  view.message.up: 19、向上取整：ROUNDUP(A,B)
  view.message.down: 20、向下取整：ROUNDDOWN(A,B)
  view.message.pow: 21、幂次：POW(A,B)
  view.message.code: 22、编码规则：CODE(A)
  view.message.dateformat: 23、日期格式化：DATEFORMAT(日期,日期掩码)
  view.message.date2str: 24、日期转字符：DATE2STR(日期,日期掩码)
  view.message.str2date: 25、字符转日期：STR2DATE(字符,日期掩码)
  view.message.validate.tempNode: 流程图存在临时的组件节点!
  view.message.validate.nodeCreated: 流程图至少存在一个已创建的组件节点!
  view.message.validate.node: 流程图至少存在一个节点!
  view.message.validate.delete: 是否删除节点？
  view.message.validate.deleteEdge: 是否删除边？
  view.message.validate.edge: 流程图中有循环或孤立组件，请检查连线!
  view.message.validate.deleteBatch: 不支持批量删除组件节点!
  view.message.validate.start: 存在多个开始节点!
  view.message.validate.overs: 已存在开始或结束节点
  view.message.validate.save: 请保存流程图后再测试
  view.message.validate.connectSelf: 不支持节点自连接!
hers.record:
  model.record.process: 流程
  model.record.details: 详情
  model.record.check.details: 查看明细
  model.record.ruleCode: 规则编码
  model.record.ruleName: 规则名称
  model.component.name: 组件名称
  model.component.type: 组件类型
  model.record.inParameter: 入参JSON
  model.record.outParameter: 出参JSON
  model.record.variable: 变量JSON
  model.record.status: 执行状态
  model.record.message: 执行错误消息
  model.record.startDatetime: 执行开始时间
  model.record.endDatetime: 执行结束时间
  model.record.component.startDatetime: 组件执行开始时间
  model.record.component.endDatetime: 组件执行结束时间
  model.record.uuid: 执行ID
  model.record.lineId: 行ID
  model.record.componentName: 组件名称
  view.title.execution.execution.record: 执行记录
  view.title.execution.record.list: 执行记录列表
  view.title.execution.process.list: 流程执行记录
  view.title.execution.process.details: 执行流程详细信息
  view.title.component.execution.record: 组件执行记录
  view.title.component.filter.failure: 筛选失败记录
hres.mapping:
  model.mapping.mappingCmp: 映射组件
  model.mapping.inparameterName: 来源字段
  model.mapping.outparameterName: 目标字段
  model.mapping.mappingName: 映射名称
  model.mapping.lovName: 值集名称
  model.mapping.frozen: 冻结
  model.mapping.isCache: 写入缓存
  model.mapping.lovView: 值集字段
  model.mapping.type: 字段类型
  model.mapping.maskCode: 日期掩码
  model.mapping.operation: 操作
  view.message.validate.header: 请先保存映射组件名称
hres.grouping:
  model.grouping.groupComponentName: 分组名称
  model.grouping.fieldName: 名称
  model.grouping.fieldType: 类型
  model.grouping.groupFlag: 分组字段
  model.grouping.aggregationType: 聚合方式
  view.title.edit: 分组组件
  view.title.grouping: 分组名称：
  view.message.validate.setGroup: 请设置分组条件！
hres.ruleComponent:
  model.ruleCmp.ruleComponent: 规则组件
  model.ruleCmp.ruleCmpName: 规则组件名称
  model.ruleCmp.ruleField: 规则字段
  model.ruleCmp.ruleMaintenance: 规则维护
  model.ruleCmp.fieldName: 字段名称
  model.ruleCmp.fieldType: 字段类型
  model.ruleCmp.editType: 编辑类型
  model.ruleCmp.businessModel: 业务模型
  model.ruleCmp.isRequired: 是否必输
  model.ruleCmp.formula: 公式
  model.ruleCmp.ruleCmpNew: 规则字段新增
  model.ruleCmp.ruleCmpEdit: 规则字段编辑
  model.ruleCmp.formulaContent: 公式内容
  view.message.validate.submit: 请创建通用字段！
  view.message.validate.submitError: 表单未做修改
  view.message.validate.formula: 请填写公式内容！
  view.message.validate.modelError: 字段类型和编辑类型冲突！
  view.message.validate.header: 请先保存规则组件名称！
  view.message.validate.nodata: 没有需要保存的内容
  view.button.field.delete: 删除通用字段将删除规则维护列表下该字段信息，是否继续?
